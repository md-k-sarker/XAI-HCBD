/**
 * Father Example
 *
 * possible solution:
 *   male AND EXISTS hasChild.TOP
 *
 * Copyright (C) 2007, Jens Lehmann
 */

// declare some prefixes to use as abbreviations
prefixes = [ ("ex","file:/Users/sarker/WorkSpaces/EclipseNeon/DL_For_Sumo/resource/forExperment/sumo_full.owl#") ]

// knowledge source definition
ks.type = "OWL File"
ks.fileName = "sumo_full_without_indi_mod.owl"

// reasoner
reasoner.type = "closed world reasoner"
reasoner.sources = { ks }

// learning problem
lp.type = "posonlylp"
//lp.type = "posNegStandard"
lp.positiveExamples = {"ex:Apple_indi_0", "ex:Apple_indi_1", 
"ex:Apple_indi_3" , "ex:Ocean_indi_0" }

//lp.negativeExamples = { "ex:market_1", "ex:market_2", "ex:market_3", "ex:market_4" , "ex:swimming_pool_1", "ex:swimming_pool_2", "ex:swimming_pool_3", "ex:swimming_pool_4" }

// create learning algorithm to run
alg.type = "celoe"
//alg.maxExecutionTimeInSeconds = 100

